/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package card;

import javax.swing.JOptionPane;

/**
 *
 * @author shivanijaiswal
 */
public class cardpayment extends javax.swing.JFrame {

    /**
     * Creates new form cardpayment
     */
    public cardpayment() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Debit = new javax.swing.JRadioButton();
        updateRestManagerLabel1 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        updateRestManagerLabel2 = new javax.swing.JLabel();
        numberTxt = new javax.swing.JTextField();
        updateRestManagerLabel3 = new javax.swing.JLabel();
        CVVTxt = new javax.swing.JTextField();
        updateRestManagerLabel4 = new javax.swing.JLabel();
        MonthTxt = new javax.swing.JTextField();
        updateRestManagerLabel = new javax.swing.JLabel();
        YearTxt = new javax.swing.JTextField();
        Credit = new javax.swing.JRadioButton();
        AddBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter Card Details");

        Debit.setText("Debit");
        Debit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebitActionPerformed(evt);
            }
        });

        updateRestManagerLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateRestManagerLabel1.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel1.setText("Card Name");

        nameText.setForeground(new java.awt.Color(72, 72, 72));
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        updateRestManagerLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateRestManagerLabel2.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel2.setText("Card Number");

        numberTxt.setForeground(new java.awt.Color(72, 72, 72));
        numberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberTxtActionPerformed(evt);
            }
        });

        updateRestManagerLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateRestManagerLabel3.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel3.setText("Card CVV");

        CVVTxt.setForeground(new java.awt.Color(72, 72, 72));
        CVVTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CVVTxtActionPerformed(evt);
            }
        });

        updateRestManagerLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateRestManagerLabel4.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel4.setText("Expiry Date");

        MonthTxt.setForeground(new java.awt.Color(72, 72, 72));
        MonthTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthTxtActionPerformed(evt);
            }
        });

        updateRestManagerLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateRestManagerLabel.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel.setText("Card Type");

        YearTxt.setForeground(new java.awt.Color(72, 72, 72));
        YearTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearTxtActionPerformed(evt);
            }
        });

        Credit.setSelected(true);
        Credit.setText("Credit");
        Credit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreditActionPerformed(evt);
            }
        });

        AddBtn.setBackground(new java.awt.Color(0, 83, 170));
        AddBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddBtn.setText("Add");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(233, 233, 233)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(updateRestManagerLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateRestManagerLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateRestManagerLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateRestManagerLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateRestManagerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CVVTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(MonthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(YearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(numberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Credit)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(Debit)))))
                    .addContainerGap(234, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(461, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(152, 152, 152)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateRestManagerLabel)
                        .addComponent(Credit)
                        .addComponent(Debit))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateRestManagerLabel1)
                        .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateRestManagerLabel2)
                        .addComponent(numberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateRestManagerLabel3)
                        .addComponent(CVVTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateRestManagerLabel4)
                        .addComponent(MonthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(YearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(29, 29, 29)
                    .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(153, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DebitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebitActionPerformed
        // TODO add your handling code here:
        Credit.setSelected(false);
        Debit.setSelected(true);
    }//GEN-LAST:event_DebitActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void numberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberTxtActionPerformed

    private void CVVTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CVVTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CVVTxtActionPerformed

    private void MonthTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonthTxtActionPerformed

    private void YearTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YearTxtActionPerformed

    private void CreditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreditActionPerformed
        // TODO add your handling code here:
        Credit.setSelected(true);
        Debit.setSelected(false);
    }//GEN-LAST:event_CreditActionPerformed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        // TODO add your handling code here:
        Boolean isValid = validateFields(nameText.getText(), CVVTxt.getText(), numberTxt.getText(), MonthTxt.getText(), YearTxt.getText());
        if (!isValid) {
            return;
        }
        String type;
        if(Credit.isSelected()) {
            type = "Credit";
        }else{
            type="Debit";
        }
        cus.setCardNo(numberTxt.getText());
        cus.setCardName(nameText.getText());
        cus.setCardCVV(CVVTxt.getText());
        cus.setCardED(MonthTxt.getText() + "/" + YearTxt.getText());
        cus.setCardType(type);
        JOptionPane.showMessageDialog(this, "Card Details Added Successfully");
        nameText.setText("");
        CVVTxt.setText("");
        MonthTxt.setText("");
        YearTxt.setText("");
        numberTxt.setText("");
        Credit.setSelected(true);
        Debit.setSelected(false);
        CustomerStaticRight adminPanel = new CustomerStaticRight();
        screen.setRightComponent(adminPanel);

        
        
    }//GEN-LAST:event_AddBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cardpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cardpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cardpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cardpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cardpayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JTextField CVVTxt;
    private javax.swing.JRadioButton Credit;
    private javax.swing.JRadioButton Debit;
    private javax.swing.JTextField MonthTxt;
    private javax.swing.JTextField YearTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField numberTxt;
    private javax.swing.JLabel updateRestManagerLabel;
    private javax.swing.JLabel updateRestManagerLabel1;
    private javax.swing.JLabel updateRestManagerLabel2;
    private javax.swing.JLabel updateRestManagerLabel3;
    private javax.swing.JLabel updateRestManagerLabel4;
    // End of variables declaration//GEN-END:variables

private Boolean validateFields(String name, String cvv, String number, String month, String year) {
        if(name.isEmpty() || cvv.isEmpty() || number.isEmpty() || month.isEmpty() || year.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (cvv.length()!=3) {
            JOptionPane.showMessageDialog(null,"CVV must be 3","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if(number.length() != 16) {
            JOptionPane.showMessageDialog(null, "Card Number must be of 16 digits","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!number.matches("^[0-9]+$")) {
            JOptionPane.showMessageDialog(null, "Card Number must have digits only","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!cvv.matches("^[0-9]+$")) {
            JOptionPane.showMessageDialog(null, "CVV must have digits only","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!month.matches("^[0-9]+$")) {
            JOptionPane.showMessageDialog(null, "Month must have digits only","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!year.matches("^[0-9]+$")) {
            JOptionPane.showMessageDialog(null, "Year must have digits only","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(month.length() != 2) {
            JOptionPane.showMessageDialog(null, "Month must be of 2 digits","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(year.length() != 4) {
            JOptionPane.showMessageDialog(null, "Year must be of 4 digits","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private Customer findCustomer() {
        for (int i = 0; i < ecosystem.getCustomerDirectory().getCustomerList().size(); i++) {
            if (ecosystem.getCustomerDirectory().getCustomerList().get(i).getAccountDetails().getUsername().equals(this.userAccount.getUsername())) {
                return ecosystem.getCustomerDirectory().getCustomerList().get(i);
            }
        }
        return null;
    }
}

